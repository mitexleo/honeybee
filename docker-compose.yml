services:
  honeypot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextcloud_honeypot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - SERVER_PORT=${SERVER_PORT:-5000}
      - HONEYPOT_DB_PATH=${HONEYPOT_DB_PATH:-/app/data/honeypot.db}
      - HONEYPOT_LOG_FILE=${HONEYPOT_LOG_FILE:-honeypot.log}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - GEOIP_DB_PATH=${GEOIP_DB_PATH:-/app/data/GeoLite2-City.mmdb}
      - MAX_LOG_SIZE=${MAX_LOG_SIZE:-10485760}
      - BACKUP_COUNT=${BACKUP_COUNT:-5}
      - DOMAIN=${DOMAIN:-localhost}
    volumes:
      - honeypot_data:/app/data
      - honeypot_logs:/app/logs
      - ./GeoLite2-City.mmdb:/app/data/GeoLite2-City.mmdb:ro
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - honeypot_network
    depends_on:
      - caddy

  caddy:
    image: caddy:2-alpine
    container_name: nextcloud_honeypot_caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./start-caddy.sh:/usr/local/bin/start-caddy.sh:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - honeypot_network
    command: sh -c "chmod +x /usr/local/bin/start-caddy.sh && /usr/local/bin/start-caddy.sh"
networks:
  honeypot_network:
    driver: bridge

volumes:
  honeypot_data:
    driver: local
  honeypot_logs:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
