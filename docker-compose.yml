services:
  honeypot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextcloud_honeypot
    restart: unless-stopped
    environment:
      - HONEYPOT_DB_PATH=/app/data/honeypot.db
      - HONEYPOT_LOG_FILE=honeypot.log
      - GEOIP_DB_PATH=/app/data/GeoLite2-City.mmdb
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-change_this_password}
      - SECRET_KEY=${SECRET_KEY}
      - MAX_CONTENT_LENGTH=1048576
      - RATE_LIMIT=100 per hour
      - MAX_LOG_SIZE=10485760
      - BACKUP_COUNT=5
      - FLASK_ENV=production
    volumes:
      - honeypot_data:/app/data
      - honeypot_logs:/app/logs
      - ./GeoLite2-City.mmdb:/app/data/GeoLite2-City.mmdb:ro
    networks:
      - honeypot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    user: "1000:1000"
    ports:
      - "5000:5000"

  #nginx:
  #  build:
  #   context: .
  #    dockerfile: Dockerfile.nginx
  #  container_name: nextcloud_honeypot_proxy_nginx
  #  restart: unless-stopped
  #  ports:
  #    - "80:80"
  #  networks:
  #    - honeypot_network
  #  depends_on:
  #    honeypot:
  #      condition: service_healthy
networks:
  honeypot_network:
    driver: bridge

volumes:
  honeypot_data:
    driver: local
  honeypot_logs:
    driver: local
# Basic deployment:
#   docker-compose up -d
#
# With caddy service:
#   docker-compose --profile caddy up -d
#
# With backup service:
#   docker-compose --profile backup up -d
#
# With monitoring:
#   docker-compose --profile monitoring up -d
#
# With ELK stack:
#   docker-compose --profile elk up -d
#
# Full deployment with all services:
#   docker-compose --profile caddy --profile backup --profile analyzer --profile monitoring --profile elk up -d
#
# Manual backup:
#   docker-compose run --rm backup
#
# View logs:
#   docker-compose logs -f honeypot
#
# Update and restart:
#   docker-compose pull && docker-compose up -d
